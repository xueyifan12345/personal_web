{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_isFocusVisible as isFocusVisible } from '@mui/utils';\n/**\n * The basic building block for creating custom switches.\n *\n * Demos:\n *\n * - [Switch](https://next.mui.com/base-ui/react-switch/#hook)\n *\n * API:\n *\n * - [useSwitch API](https://next.mui.com/base-ui/react-switch/hooks-api/#use-switch)\n */\nexport function useSwitch(props) {\n  const {\n    checked: checkedProp,\n    defaultChecked,\n    disabled,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly,\n    required\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'Switch',\n    state: 'checked'\n  });\n  const createHandleInputChange = otherProps => event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    setCheckedState(event.target.checked);\n    onChange?.(event);\n    otherProps.onChange?.(event);\n  };\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  const inputRef = React.useRef(null);\n  const createHandleFocus = otherProps => event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!inputRef.current) {\n      inputRef.current = event.currentTarget;\n    }\n    if (isFocusVisible(event.target)) {\n      setFocusVisible(true);\n      onFocusVisible?.(event);\n    }\n    onFocus?.(event);\n    otherProps.onFocus?.(event);\n  };\n  const createHandleBlur = otherProps => event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusVisible(false);\n    }\n    onBlur?.(event);\n    otherProps.onBlur?.(event);\n  };\n  const handleInputRef = useForkRef(inputRef);\n  const getInputProps = (otherProps = {}) => ({\n    checked: checkedProp,\n    defaultChecked,\n    disabled,\n    readOnly,\n    ref: handleInputRef,\n    required,\n    type: 'checkbox',\n    role: 'switch',\n    'aria-checked': checkedProp,\n    ...otherProps,\n    onChange: createHandleInputChange(otherProps),\n    onFocus: createHandleFocus(otherProps),\n    onBlur: createHandleBlur(otherProps)\n  });\n  return {\n    checked,\n    disabled: Boolean(disabled),\n    focusVisible,\n    getInputProps,\n    inputRef: handleInputRef,\n    readOnly: Boolean(readOnly)\n  };\n}","map":{"version":3,"names":["React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","unstable_isFocusVisible","isFocusVisible","useSwitch","props","checked","checkedProp","defaultChecked","disabled","onBlur","onChange","onFocus","onFocusVisible","readOnly","required","setCheckedState","controlled","default","Boolean","name","state","createHandleInputChange","otherProps","event","nativeEvent","defaultPrevented","target","focusVisible","setFocusVisible","useState","inputRef","useRef","createHandleFocus","current","currentTarget","createHandleBlur","handleInputRef","getInputProps","ref","type","role"],"sources":["/Users/jayx/Desktop/my-personal-website/node_modules/@mui/base/useSwitch/useSwitch.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_isFocusVisible as isFocusVisible } from '@mui/utils';\n/**\n * The basic building block for creating custom switches.\n *\n * Demos:\n *\n * - [Switch](https://next.mui.com/base-ui/react-switch/#hook)\n *\n * API:\n *\n * - [useSwitch API](https://next.mui.com/base-ui/react-switch/hooks-api/#use-switch)\n */\nexport function useSwitch(props) {\n  const {\n    checked: checkedProp,\n    defaultChecked,\n    disabled,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly,\n    required\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'Switch',\n    state: 'checked'\n  });\n  const createHandleInputChange = otherProps => event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    setCheckedState(event.target.checked);\n    onChange?.(event);\n    otherProps.onChange?.(event);\n  };\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  const inputRef = React.useRef(null);\n  const createHandleFocus = otherProps => event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!inputRef.current) {\n      inputRef.current = event.currentTarget;\n    }\n    if (isFocusVisible(event.target)) {\n      setFocusVisible(true);\n      onFocusVisible?.(event);\n    }\n    onFocus?.(event);\n    otherProps.onFocus?.(event);\n  };\n  const createHandleBlur = otherProps => event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusVisible(false);\n    }\n    onBlur?.(event);\n    otherProps.onBlur?.(event);\n  };\n  const handleInputRef = useForkRef(inputRef);\n  const getInputProps = (otherProps = {}) => ({\n    checked: checkedProp,\n    defaultChecked,\n    disabled,\n    readOnly,\n    ref: handleInputRef,\n    required,\n    type: 'checkbox',\n    role: 'switch',\n    'aria-checked': checkedProp,\n    ...otherProps,\n    onChange: createHandleInputChange(otherProps),\n    onFocus: createHandleFocus(otherProps),\n    onBlur: createHandleBlur(otherProps)\n  });\n  return {\n    checked,\n    disabled: Boolean(disabled),\n    focusVisible,\n    getInputProps,\n    inputRef: handleInputRef,\n    readOnly: Boolean(readOnly)\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
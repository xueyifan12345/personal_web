{"ast":null,"code":"var _jsxFileName = \"/Users/jayx/Desktop/my-personal-website/src/components/AIChat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIChat = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleInputChange = e => {\n    setInputMessage(e.target.value);\n  };\n  const simulateAIResponse = question => {\n    const responses = [\"That's an interesting question. Let me think about it.\", \"I'm not sure about that, but here's what I know...\", \"Based on my knowledge, I would say...\", \"That's a complex topic. Here's a simplified explanation:\", \"I don't have a definitive answer, but we could explore this further.\"];\n    return responses[Math.floor(Math.random() * responses.length)];\n  };\n  const handleSendMessage = () => {\n    if (inputMessage.trim() !== '') {\n      setMessages(prevMessages => [...prevMessages, `You: ${inputMessage}`]);\n      const aiResponse = simulateAIResponse(inputMessage);\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, `AI: ${aiResponse}`]);\n      }, 1000); // Simulate AI thinking time\n      setInputMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const chatBoxStyle = {\n    position: 'fixed',\n    bottom: '20px',\n    right: '20px',\n    width: '300px',\n    height: '400px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    backgroundColor: 'white',\n    display: isOpen ? 'flex' : 'none',\n    flexDirection: 'column'\n  };\n  const chatHeaderStyle = {\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    padding: '10px',\n    fontWeight: 'bold'\n  };\n  const chatMessagesStyle = {\n    flex: 1,\n    overflowY: 'auto',\n    padding: '10px'\n  };\n  const chatInputStyle = {\n    display: 'flex',\n    padding: '10px'\n  };\n  const inputStyle = {\n    flex: 1,\n    marginRight: '10px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleChat,\n      children: \"Open AI Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatBoxStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: chatHeaderStyle,\n        children: \"AI Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: chatMessagesStyle,\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: chatInputStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress,\n          style: inputStyle,\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChat, \"DflPJJogiyXc4YvY/hnGu2Eq3zg=\");\n_c = AIChat;\nexport default AIChat;\nvar _c;\n$RefreshReg$(_c, \"AIChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","AIChat","_s","isOpen","setIsOpen","messages","setMessages","inputMessage","setInputMessage","messagesEndRef","toggleChat","handleInputChange","e","target","value","simulateAIResponse","question","responses","Math","floor","random","length","handleSendMessage","trim","prevMessages","aiResponse","setTimeout","handleKeyPress","key","_messagesEndRef$curre","current","scrollIntoView","behavior","chatBoxStyle","position","bottom","right","width","height","border","borderRadius","backgroundColor","display","flexDirection","chatHeaderStyle","color","padding","fontWeight","chatMessagesStyle","flex","overflowY","chatInputStyle","inputStyle","marginRight","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","map","message","index","ref","type","onChange","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["/Users/jayx/Desktop/my-personal-website/src/components/AIChat.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst AIChat: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState<string[]>([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputMessage(e.target.value);\n  };\n\n  const simulateAIResponse = (question: string): string => {\n    const responses = [\n      \"That's an interesting question. Let me think about it.\",\n      \"I'm not sure about that, but here's what I know...\",\n      \"Based on my knowledge, I would say...\",\n      \"That's a complex topic. Here's a simplified explanation:\",\n      \"I don't have a definitive answer, but we could explore this further.\"\n    ];\n    return responses[Math.floor(Math.random() * responses.length)];\n  };\n\n  const handleSendMessage = () => {\n    if (inputMessage.trim() !== '') {\n      setMessages(prevMessages => [...prevMessages, `You: ${inputMessage}`]);\n      const aiResponse = simulateAIResponse(inputMessage);\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, `AI: ${aiResponse}`]);\n      }, 1000); // Simulate AI thinking time\n      setInputMessage('');\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const chatBoxStyle: React.CSSProperties = {\n    position: 'fixed',\n    bottom: '20px',\n    right: '20px',\n    width: '300px',\n    height: '400px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    backgroundColor: 'white',\n    display: isOpen ? 'flex' : 'none',\n    flexDirection: 'column',\n  };\n\n  const chatHeaderStyle: React.CSSProperties = {\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    padding: '10px',\n    fontWeight: 'bold',\n  };\n\n  const chatMessagesStyle: React.CSSProperties = {\n    flex: 1,\n    overflowY: 'auto',\n    padding: '10px',\n  };\n\n  const chatInputStyle: React.CSSProperties = {\n    display: 'flex',\n    padding: '10px',\n  };\n\n  const inputStyle: React.CSSProperties = {\n    flex: 1,\n    marginRight: '10px',\n  };\n\n  return (\n    <div>\n      <button onClick={toggleChat}>Open AI Chat</button>\n      <div style={chatBoxStyle}>\n        <div style={chatHeaderStyle}>AI Chat</div>\n        <div style={chatMessagesStyle}>\n          {messages.map((message, index) => (\n            <div key={index}>{message}</div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n        <div style={chatInputStyle}>\n          <input\n            type=\"text\"\n            value={inputMessage}\n            onChange={handleInputChange}\n            onKeyPress={handleKeyPress}\n            style={inputStyle}\n            placeholder=\"Type your message...\"\n          />\n          <button onClick={handleSendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AIChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
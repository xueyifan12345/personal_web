{"ast":null,"code":"import { moveHighlight, listReducer, ListActionTypes, handleItemSelection } from '../useList';\nimport { SelectActionTypes } from './useSelect.types';\nexport function selectReducer(state, action) {\n  const {\n    open\n  } = state;\n  const {\n    context: {\n      selectionMode\n    }\n  } = action;\n  if (action.type === SelectActionTypes.buttonClick) {\n    const itemToHighlight = state.selectedValues[0] ?? moveHighlight(null, 'start', action.context);\n    return {\n      ...state,\n      open: !open,\n      highlightedValue: !open ? itemToHighlight : null\n    };\n  }\n  if (action.type === SelectActionTypes.browserAutoFill) {\n    return handleItemSelection(action.item, state, action.context);\n  }\n  const newState = listReducer(state, action);\n  switch (action.type) {\n    case ListActionTypes.keyDown:\n      if (state.open) {\n        if (action.event.key === 'Escape') {\n          return {\n            ...newState,\n            open: false\n          };\n        }\n      } else {\n        if (action.event.key === 'ArrowDown') {\n          return {\n            ...state,\n            open: true,\n            highlightedValue: state.selectedValues[0] ?? moveHighlight(null, 'start', action.context)\n          };\n        }\n        if (action.event.key === 'ArrowUp') {\n          return {\n            ...state,\n            open: true,\n            highlightedValue: state.selectedValues[0] ?? moveHighlight(null, 'end', action.context)\n          };\n        }\n      }\n      break;\n    case ListActionTypes.itemClick:\n      if (selectionMode === 'single') {\n        return {\n          ...newState,\n          open: false\n        };\n      }\n      break;\n    case ListActionTypes.blur:\n      return {\n        ...newState,\n        open: false\n      };\n    default:\n      return newState;\n  }\n  return newState;\n}","map":{"version":3,"names":["moveHighlight","listReducer","ListActionTypes","handleItemSelection","SelectActionTypes","selectReducer","state","action","open","context","selectionMode","type","buttonClick","itemToHighlight","selectedValues","highlightedValue","browserAutoFill","item","newState","keyDown","event","key","itemClick","blur"],"sources":["/Users/jayx/Desktop/my-personal-website/node_modules/@mui/base/useSelect/selectReducer.js"],"sourcesContent":["import { moveHighlight, listReducer, ListActionTypes, handleItemSelection } from '../useList';\nimport { SelectActionTypes } from './useSelect.types';\nexport function selectReducer(state, action) {\n  const {\n    open\n  } = state;\n  const {\n    context: {\n      selectionMode\n    }\n  } = action;\n  if (action.type === SelectActionTypes.buttonClick) {\n    const itemToHighlight = state.selectedValues[0] ?? moveHighlight(null, 'start', action.context);\n    return {\n      ...state,\n      open: !open,\n      highlightedValue: !open ? itemToHighlight : null\n    };\n  }\n  if (action.type === SelectActionTypes.browserAutoFill) {\n    return handleItemSelection(action.item, state, action.context);\n  }\n  const newState = listReducer(state, action);\n  switch (action.type) {\n    case ListActionTypes.keyDown:\n      if (state.open) {\n        if (action.event.key === 'Escape') {\n          return {\n            ...newState,\n            open: false\n          };\n        }\n      } else {\n        if (action.event.key === 'ArrowDown') {\n          return {\n            ...state,\n            open: true,\n            highlightedValue: state.selectedValues[0] ?? moveHighlight(null, 'start', action.context)\n          };\n        }\n        if (action.event.key === 'ArrowUp') {\n          return {\n            ...state,\n            open: true,\n            highlightedValue: state.selectedValues[0] ?? moveHighlight(null, 'end', action.context)\n          };\n        }\n      }\n      break;\n    case ListActionTypes.itemClick:\n      if (selectionMode === 'single') {\n        return {\n          ...newState,\n          open: false\n        };\n      }\n      break;\n    case ListActionTypes.blur:\n      return {\n        ...newState,\n        open: false\n      };\n    default:\n      return newState;\n  }\n  return newState;\n}"],"mappings":"AAAA,SAASA,aAAa,EAAEC,WAAW,EAAEC,eAAe,EAAEC,mBAAmB,QAAQ,YAAY;AAC7F,SAASC,iBAAiB,QAAQ,mBAAmB;AACrD,OAAO,SAASC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC3C,MAAM;IACJC;EACF,CAAC,GAAGF,KAAK;EACT,MAAM;IACJG,OAAO,EAAE;MACPC;IACF;EACF,CAAC,GAAGH,MAAM;EACV,IAAIA,MAAM,CAACI,IAAI,KAAKP,iBAAiB,CAACQ,WAAW,EAAE;IACjD,MAAMC,eAAe,GAAGP,KAAK,CAACQ,cAAc,CAAC,CAAC,CAAC,IAAId,aAAa,CAAC,IAAI,EAAE,OAAO,EAAEO,MAAM,CAACE,OAAO,CAAC;IAC/F,OAAO;MACL,GAAGH,KAAK;MACRE,IAAI,EAAE,CAACA,IAAI;MACXO,gBAAgB,EAAE,CAACP,IAAI,GAAGK,eAAe,GAAG;IAC9C,CAAC;EACH;EACA,IAAIN,MAAM,CAACI,IAAI,KAAKP,iBAAiB,CAACY,eAAe,EAAE;IACrD,OAAOb,mBAAmB,CAACI,MAAM,CAACU,IAAI,EAAEX,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;EAChE;EACA,MAAMS,QAAQ,GAAGjB,WAAW,CAACK,KAAK,EAAEC,MAAM,CAAC;EAC3C,QAAQA,MAAM,CAACI,IAAI;IACjB,KAAKT,eAAe,CAACiB,OAAO;MAC1B,IAAIb,KAAK,CAACE,IAAI,EAAE;QACd,IAAID,MAAM,CAACa,KAAK,CAACC,GAAG,KAAK,QAAQ,EAAE;UACjC,OAAO;YACL,GAAGH,QAAQ;YACXV,IAAI,EAAE;UACR,CAAC;QACH;MACF,CAAC,MAAM;QACL,IAAID,MAAM,CAACa,KAAK,CAACC,GAAG,KAAK,WAAW,EAAE;UACpC,OAAO;YACL,GAAGf,KAAK;YACRE,IAAI,EAAE,IAAI;YACVO,gBAAgB,EAAET,KAAK,CAACQ,cAAc,CAAC,CAAC,CAAC,IAAId,aAAa,CAAC,IAAI,EAAE,OAAO,EAAEO,MAAM,CAACE,OAAO;UAC1F,CAAC;QACH;QACA,IAAIF,MAAM,CAACa,KAAK,CAACC,GAAG,KAAK,SAAS,EAAE;UAClC,OAAO;YACL,GAAGf,KAAK;YACRE,IAAI,EAAE,IAAI;YACVO,gBAAgB,EAAET,KAAK,CAACQ,cAAc,CAAC,CAAC,CAAC,IAAId,aAAa,CAAC,IAAI,EAAE,KAAK,EAAEO,MAAM,CAACE,OAAO;UACxF,CAAC;QACH;MACF;MACA;IACF,KAAKP,eAAe,CAACoB,SAAS;MAC5B,IAAIZ,aAAa,KAAK,QAAQ,EAAE;QAC9B,OAAO;UACL,GAAGQ,QAAQ;UACXV,IAAI,EAAE;QACR,CAAC;MACH;MACA;IACF,KAAKN,eAAe,CAACqB,IAAI;MACvB,OAAO;QACL,GAAGL,QAAQ;QACXV,IAAI,EAAE;MACR,CAAC;IACH;MACE,OAAOU,QAAQ;EACnB;EACA,OAAOA,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
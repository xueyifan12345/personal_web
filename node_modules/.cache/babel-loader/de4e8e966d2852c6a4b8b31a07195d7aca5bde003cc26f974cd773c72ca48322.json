{"ast":null,"code":"var _jsxFileName = \"/Users/jayx/Desktop/my-personal-website/src/components/AIChat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Typography, TextField, Button, Paper, List, ListItem, ListItemText, ThemeProvider, createTheme } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Arial, sans-serif'\n  }\n});\nconst AIChat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const handleInputChange = e => {\n    setInputMessage(e.target.value);\n  };\n  const simulateAIResponse = question => {\n    const responses = [\"That's an interesting question. Let me think about it.\", \"I'm not sure about that, but here's what I know...\", \"Based on my knowledge, I would say...\", \"That's a complex topic. Here's a simplified explanation:\", \"I don't have a definitive answer, but we could explore this further.\"];\n    return responses[Math.floor(Math.random() * responses.length)];\n  };\n  const handleSendMessage = () => {\n    if (inputMessage.trim() !== '') {\n      setMessages(prevMessages => [...prevMessages, `You: ${inputMessage}`]);\n      const aiResponse = simulateAIResponse(inputMessage);\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, `AI: ${aiResponse}`]);\n      }, 1000); // Simulate AI thinking time\n      setInputMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '80%',\n        maxWidth: '600px',\n        height: '70vh',\n        display: 'flex',\n        flexDirection: 'column',\n        bgcolor: 'background.paper',\n        boxShadow: 24,\n        p: 4,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: \"AI Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          flex: 1,\n          overflowY: 'auto',\n          mb: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          value: inputMessage,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 22\n          }, this),\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChat, \"6z4F1lfya+yzsYCu3M07tLasrK0=\");\n_c = AIChat;\nexport default AIChat;\nvar _c;\n$RefreshReg$(_c, \"AIChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Typography","TextField","Button","Paper","List","ListItem","ListItemText","ThemeProvider","createTheme","SendIcon","jsxDEV","_jsxDEV","theme","typography","fontFamily","AIChat","_s","messages","setMessages","inputMessage","setInputMessage","messagesEndRef","handleInputChange","e","target","value","simulateAIResponse","question","responses","Math","floor","random","length","handleSendMessage","trim","prevMessages","aiResponse","setTimeout","handleKeyPress","key","_messagesEndRef$curre","current","scrollIntoView","behavior","children","sx","position","top","left","transform","width","maxWidth","height","display","flexDirection","bgcolor","boxShadow","p","borderRadius","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","flex","overflowY","mb","map","message","index","primary","ref","fullWidth","onChange","onKeyPress","placeholder","mr","color","endIcon","onClick","_c","$RefreshReg$"],"sources":["/Users/jayx/Desktop/my-personal-website/src/components/AIChat.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  ThemeProvider,\n  createTheme,\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Arial, sans-serif',\n  },\n});\n\nconst AIChat: React.FC = () => {\n  const [messages, setMessages] = useState<string[]>([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputMessage(e.target.value);\n  };\n\n  const simulateAIResponse = (question: string): string => {\n    const responses = [\n      \"That's an interesting question. Let me think about it.\",\n      \"I'm not sure about that, but here's what I know...\",\n      \"Based on my knowledge, I would say...\",\n      \"That's a complex topic. Here's a simplified explanation:\",\n      \"I don't have a definitive answer, but we could explore this further.\"\n    ];\n    return responses[Math.floor(Math.random() * responses.length)];\n  };\n\n  const handleSendMessage = () => {\n    if (inputMessage.trim() !== '') {\n      setMessages(prevMessages => [...prevMessages, `You: ${inputMessage}`]);\n      const aiResponse = simulateAIResponse(inputMessage);\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, `AI: ${aiResponse}`]);\n      }, 1000); // Simulate AI thinking time\n      setInputMessage('');\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box\n        sx={{\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: '80%',\n          maxWidth: '600px',\n          height: '70vh',\n          display: 'flex',\n          flexDirection: 'column',\n          bgcolor: 'background.paper',\n          boxShadow: 24,\n          p: 4,\n          borderRadius: 2,\n        }}\n      >\n        <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n          AI Chat\n        </Typography>\n        <Paper\n          elevation={3}\n          sx={{\n            flex: 1,\n            overflowY: 'auto',\n            mb: 2,\n            p: 2,\n          }}\n        >\n          <List>\n            {messages.map((message, index) => (\n              <ListItem key={index}>\n                <ListItemText primary={message} />\n              </ListItem>\n            ))}\n          </List>\n          <div ref={messagesEndRef} />\n        </Paper>\n        <Box sx={{ display: 'flex' }}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            value={inputMessage}\n            onChange={handleInputChange}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type your message...\"\n            sx={{ mr: 1 }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<SendIcon />}\n            onClick={handleSendMessage}\n          >\n            Send\n          </Button>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default AIChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * A utility component that hooks up to the Base UI transitions API and\n * applies a CSS transition to its children when necessary.\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssTransition API](https://mui.com/base-ui/react-transitions/components-api/#css-transition)\n */\nconst CssTransition = /*#__PURE__*/React.forwardRef(function CssTransition(props, forwardedRef) {\n  const {\n    children,\n    className,\n    lastTransitionedPropertyOnExit,\n    enterClassName,\n    exitClassName,\n    ...other\n  } = props;\n  const {\n    requestedEnter,\n    onExited\n  } = useTransitionStateManager();\n  const [isEntering, setIsEntering] = React.useState(false);\n\n  // The `isEntering` state (which is used to determine the right CSS class to apply)\n  // is updated slightly (one animation frame) after the `requestedEnter` state is updated.\n  // Thanks to this, elements that are mounted will have their enter transition applied\n  // (if the `enterClassName` was applied when the element was mounted, the transition would not be fired).\n  React.useEffect(() => {\n    if (requestedEnter) {\n      requestAnimationFrame(() => {\n        setIsEntering(true);\n      });\n    } else {\n      setIsEntering(false);\n    }\n  }, [requestedEnter]);\n  const handleTransitionEnd = React.useCallback(event => {\n    if (!requestedEnter && (lastTransitionedPropertyOnExit == null || event.propertyName === lastTransitionedPropertyOnExit)) {\n      onExited();\n    }\n  }, [onExited, requestedEnter, lastTransitionedPropertyOnExit]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    onTransitionEnd: handleTransitionEnd,\n    className: clsx(className, isEntering ? enterClassName : exitClassName),\n    ...other,\n    ref: forwardedRef,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CssTransition.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitClassName: PropTypes.string,\n  lastTransitionedPropertyOnEnter: PropTypes.string,\n  lastTransitionedPropertyOnExit: PropTypes.string\n} : void 0;\nexport { CssTransition };","map":{"version":3,"names":["React","PropTypes","clsx","useTransitionStateManager","jsx","_jsx","CssTransition","forwardRef","props","forwardedRef","children","className","lastTransitionedPropertyOnExit","enterClassName","exitClassName","other","requestedEnter","onExited","isEntering","setIsEntering","useState","useEffect","requestAnimationFrame","handleTransitionEnd","useCallback","event","propertyName","onTransitionEnd","ref","process","env","NODE_ENV","propTypes","node","string","lastTransitionedPropertyOnEnter"],"sources":["/Users/jayx/Desktop/my-personal-website/node_modules/@mui/base/Transitions/CssTransition.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * A utility component that hooks up to the Base UI transitions API and\n * applies a CSS transition to its children when necessary.\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssTransition API](https://mui.com/base-ui/react-transitions/components-api/#css-transition)\n */\nconst CssTransition = /*#__PURE__*/React.forwardRef(function CssTransition(props, forwardedRef) {\n  const {\n    children,\n    className,\n    lastTransitionedPropertyOnExit,\n    enterClassName,\n    exitClassName,\n    ...other\n  } = props;\n  const {\n    requestedEnter,\n    onExited\n  } = useTransitionStateManager();\n  const [isEntering, setIsEntering] = React.useState(false);\n\n  // The `isEntering` state (which is used to determine the right CSS class to apply)\n  // is updated slightly (one animation frame) after the `requestedEnter` state is updated.\n  // Thanks to this, elements that are mounted will have their enter transition applied\n  // (if the `enterClassName` was applied when the element was mounted, the transition would not be fired).\n  React.useEffect(() => {\n    if (requestedEnter) {\n      requestAnimationFrame(() => {\n        setIsEntering(true);\n      });\n    } else {\n      setIsEntering(false);\n    }\n  }, [requestedEnter]);\n  const handleTransitionEnd = React.useCallback(event => {\n    if (!requestedEnter && (lastTransitionedPropertyOnExit == null || event.propertyName === lastTransitionedPropertyOnExit)) {\n      onExited();\n    }\n  }, [onExited, requestedEnter, lastTransitionedPropertyOnExit]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    onTransitionEnd: handleTransitionEnd,\n    className: clsx(className, isEntering ? enterClassName : exitClassName),\n    ...other,\n    ref: forwardedRef,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CssTransition.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitClassName: PropTypes.string,\n  lastTransitionedPropertyOnEnter: PropTypes.string,\n  lastTransitionedPropertyOnExit: PropTypes.string\n} : void 0;\nexport { CssTransition };"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,yBAAyB,QAAQ,kBAAkB;AAC5D,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,aAAaN,KAAK,CAACO,UAAU,CAAC,SAASD,aAAaA,CAACE,KAAK,EAAEC,YAAY,EAAE;EAC9F,MAAM;IACJC,QAAQ;IACRC,SAAS;IACTC,8BAA8B;IAC9BC,cAAc;IACdC,aAAa;IACb,GAAGC;EACL,CAAC,GAAGP,KAAK;EACT,MAAM;IACJQ,cAAc;IACdC;EACF,CAAC,GAAGd,yBAAyB,CAAC,CAAC;EAC/B,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGnB,KAAK,CAACoB,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA;EACA;EACA;EACApB,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpB,IAAIL,cAAc,EAAE;MAClBM,qBAAqB,CAAC,MAAM;QAC1BH,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLA,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EACpB,MAAMO,mBAAmB,GAAGvB,KAAK,CAACwB,WAAW,CAACC,KAAK,IAAI;IACrD,IAAI,CAACT,cAAc,KAAKJ,8BAA8B,IAAI,IAAI,IAAIa,KAAK,CAACC,YAAY,KAAKd,8BAA8B,CAAC,EAAE;MACxHK,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACA,QAAQ,EAAED,cAAc,EAAEJ,8BAA8B,CAAC,CAAC;EAC9D,OAAO,aAAaP,IAAI,CAAC,KAAK,EAAE;IAC9BsB,eAAe,EAAEJ,mBAAmB;IACpCZ,SAAS,EAAET,IAAI,CAACS,SAAS,EAAEO,UAAU,GAAGL,cAAc,GAAGC,aAAa,CAAC;IACvE,GAAGC,KAAK;IACRa,GAAG,EAAEnB,YAAY;IACjBC,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ,CAAC,CAAC;AACFmB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGzB,aAAa,CAAC0B,SAAS,GAAG;EAChEtB,QAAQ,EAAET,SAAS,CAACgC,IAAI;EACxBtB,SAAS,EAAEV,SAAS,CAACiC,MAAM;EAC3BrB,cAAc,EAAEZ,SAAS,CAACiC,MAAM;EAChCpB,aAAa,EAAEb,SAAS,CAACiC,MAAM;EAC/BC,+BAA+B,EAAElC,SAAS,CAACiC,MAAM;EACjDtB,8BAA8B,EAAEX,SAAS,CAACiC;AAC5C,CAAC,GAAG,KAAK,CAAC;AACV,SAAS5B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}